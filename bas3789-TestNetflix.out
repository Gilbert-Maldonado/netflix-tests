g++-4.8 -pedantic -std=c++11 -Wall -Weffc++ Netflix.c++ RunNetflix.c++ -o RunNetflix
clang-check-3.8 -extra-arg=-std=c++11          Netflix.c++     --
clang-check-3.8 -extra-arg=-std=c++11 -analyze Netflix.c++     --
clang-check-3.8 -extra-arg=-std=c++11          RunNetflix.c++  --
clang-check-3.8 -extra-arg=-std=c++11 -analyze RunNetflix.c++  --
./RunNetflix < RunNetflix.in > RunNetflix.tmp
diff RunNetflix.tmp RunNetflix.out
g++-4.8 -pedantic -std=c++11 -Wall -Weffc++ -fprofile-arcs -ftest-coverage Netflix.c++ TestNetflix.c++ -o TestNetflix -lgtest -lgtest_main -pthread
clang-check-3.8 -extra-arg=-std=c++11          TestNetflix.c++ --
clang-check-3.8 -extra-arg=-std=c++11 -analyze TestNetflix.c++ --
valgrind ./TestNetflix                               >  TestNetflix.tmp 2>&1
gcov-4.8 -b Netflix.c++ | grep -A 5 "File 'Netflix.c++'" >> TestNetflix.tmp
cat TestNetflix.tmp
==20016== Memcheck, a memory error detector
==20016== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==20016== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==20016== Command: ./TestNetflix
==20016== 
Running main() from gtest_main.cc
[==========] Running 21 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 21 tests from NetflixFixture
[ RUN      ] NetflixFixture.print_movie_1
[       OK ] NetflixFixture.print_movie_1 (12 ms)
[ RUN      ] NetflixFixture.print_movie_2
[       OK ] NetflixFixture.print_movie_2 (2 ms)
[ RUN      ] NetflixFixture.print_movie_3
[       OK ] NetflixFixture.print_movie_3 (3 ms)
[ RUN      ] NetflixFixture.print_rating_1
[       OK ] NetflixFixture.print_rating_1 (18 ms)
[ RUN      ] NetflixFixture.print_rating_2
[       OK ] NetflixFixture.print_rating_2 (3 ms)
[ RUN      ] NetflixFixture.print_rating_3
[       OK ] NetflixFixture.print_rating_3 (2 ms)
[ RUN      ] NetflixFixture.print_rmse_1
[       OK ] NetflixFixture.print_rmse_1 (3 ms)
[ RUN      ] NetflixFixture.print_rmse_2
[       OK ] NetflixFixture.print_rmse_2 (5 ms)
[ RUN      ] NetflixFixture.print_rmse_3
[       OK ] NetflixFixture.print_rmse_3 (2 ms)
[ RUN      ] NetflixFixture.read_movie_1
[       OK ] NetflixFixture.read_movie_1 (12 ms)
[ RUN      ] NetflixFixture.read_movie_2
[       OK ] NetflixFixture.read_movie_2 (2 ms)
[ RUN      ] NetflixFixture.read_movie_3
[       OK ] NetflixFixture.read_movie_3 (3 ms)
[ RUN      ] NetflixFixture.read_customer_1
[       OK ] NetflixFixture.read_customer_1 (7 ms)
[ RUN      ] NetflixFixture.read_customer_2
[       OK ] NetflixFixture.read_customer_2 (4 ms)
[ RUN      ] NetflixFixture.read_customer_3
[       OK ] NetflixFixture.read_customer_3 (2 ms)
[ RUN      ] NetflixFixture.netflix_predict_1
[       OK ] NetflixFixture.netflix_predict_1 (5 ms)
[ RUN      ] NetflixFixture.netflix_predict_2
[       OK ] NetflixFixture.netflix_predict_2 (2 ms)
[ RUN      ] NetflixFixture.netflix_predict_3
[       OK ] NetflixFixture.netflix_predict_3 (1 ms)
[ RUN      ] NetflixFixture.netflix_solve_1
[       OK ] NetflixFixture.netflix_solve_1 (68 ms)
[ RUN      ] NetflixFixture.netflix_solve_2
[       OK ] NetflixFixture.netflix_solve_2 (6 ms)
[ RUN      ] NetflixFixture.netflix_solve_3
[       OK ] NetflixFixture.netflix_solve_3 (6 ms)
[----------] 21 tests from NetflixFixture (175 ms total)

[----------] Global test environment tear-down
[==========] 21 tests from 1 test case ran. (203 ms total)
[  PASSED  ] 21 tests.
==20016== 
==20016== HEAP SUMMARY:
==20016==     in use at exit: 0 bytes in 0 blocks
==20016==   total heap usage: 593 allocs, 593 frees, 85,942 bytes allocated
==20016== 
==20016== All heap blocks were freed -- no leaks are possible
==20016== 
==20016== For counts of detected and suppressed errors, rerun with: -v
==20016== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Netflix.c++'
Lines executed:100.00% of 46
Branches executed:100.00% of 56
Taken at least once:58.93% of 56
Calls executed:92.16% of 51
Creating 'Netflix.c++.gcov'
Netflix.c++ found
Netflix.h found
Netflix.log found
html found
RunNetflix.c++ found
RunNetflix.in found
RunNetflix.out found
TestNetflix.c++ found
TestNetflix.out found
success
